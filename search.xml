<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>活动策划</title>
      <link href="2020/11/11/%E6%B4%BB%E5%8A%A8%E7%AD%96%E5%88%92/"/>
      <url>2020/11/11/%E6%B4%BB%E5%8A%A8%E7%AD%96%E5%88%92/</url>
      
        <content type="html"><![CDATA[<p>#####活动方案主要由七部分构成：<br>总活动方案、活动经费预算表、工作安排表、活动具体流程表、活动效果<br>评估、其他附件、活动应急方案等  </p><hr><p>#####总活动方案  </p><p>活动主题、活动目的或意义、活动时间、活动地点、活动对象、活动组委<br>会、活动流程安排、工作人员安排、活动经费预算、相关附件、应急方案等。<br>具体的方案项目设定由具体的活动决定。<br>活动流程安排、工作人员安排两项只须列出标题即可，在备注中注明详见附件**即可。<br>活动经费预算一定要将总活动方案以外的所有涉及活动的方案、表格等全部列举出来  </p><hr><p>#####活动经费预算表<br>活动经费预算表<br>此项中要将活动经费的去向一一详细列出，并统计总预算。<br>活动指导原则。凑整原则是说不可预计花费和其他所有预算加起来尽量是<br>个整数;5%—10%的原则是说不可预计花费占其他所有预算总和的 5%—10%;具体<br>在经费预算中必须添加“不可预计花费”项，此项费用预算遵循三个原则。一是<br>凑整原则，二是 5%—10%的原则，三是具体活动指导原则是说根据具体的活动<br>确定此项费用。<br>此外还要注意，费用预算尽量多一些，否则超出预算会有很多麻烦。<br>无论在什么样的企业里  </p><hr><p>#####工作安排表<br> 任何活动必须成立活动组委会，并进行分工，分工要尽可能的细。<br>做出分工明细表，上面明确标出每项任务落实的具体人和完成的具体时<br>间，这点非常重要。<br>工作安排表包括前期准备工作的安排和活动当天的工作安排，前期的工作<br>安排可具体到某一天，活动当天的安排必须具体到分钟。<br>活动具体流程表<br>是指活动当天的流程，具体流程一旦确定非人为不可抗拒原因及重大事件<br>不得随意修改。  </p><hr><p>#####活动效果评估<br>活动效果评估一般以调查员工的满意度为主，问卷的形式较多。<br>这一项很多公司都没有明确的要求  </p><hr><p>#####活动应急方案<br>活动总方案一般在活动前 30—60 天制定，因而无法确定一两个月后的一些<br>具体事情，所有应急方案是必不可少的。<br>应急方案主要是针对活动当天可能出项的影响活动进程的情况做出相应的<br>对策，此方案包括的要件与主方案大致相同，不再细说。</p>]]></content>
      
      
      <categories>
          
          <category> 技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 策划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大二上java学习</title>
      <link href="2020/10/03/%E6%A8%A1%E6%9D%BF/"/>
      <url>2020/10/03/%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 计划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
            <tag> 编程 </tag>
            
            <tag> 化学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大二上java学习</title>
      <link href="2020/10/03/%E5%A4%A7%E4%BA%8C%E4%B8%8Ajava%E5%AD%A6%E4%B9%A0/"/>
      <url>2020/10/03/%E5%A4%A7%E4%BA%8C%E4%B8%8Ajava%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="封装的定义"><a href="#封装的定义" class="headerlink" title="封装的定义"></a>封装的定义</h1><p> • 封装是把过程和数据包围起来，对数据的访问只能通过已定义的接口。面向对象计算始于以下基本概念：现实世界可以被描绘成一系列完全自治的、封装的对象，这些对象通过一个受保护的接口访问其他对象。  </p><p> • 对于封装而言，一个对象所封装的是自己的属性和方法，所以它不需要依赖其他对象就可以完成自己的操作。封装的优点如下：  </p><p> • 良好的封装能够减少耦合。  </p><p> • 类内部的结构可以自由修改。  </p><p> • 可以对成员变量进行更精确的控制。  </p><p> • 隐藏信息，实现细节。</p><h2 id="代码例子"><a href="#代码例子" class="headerlink" title="代码例子"></a>代码例子</h2><pre><code class="java">class Person &#123;   private String name;   private int age;   private float weight;   public String getName() &#123;       return name;   &#125;   public void setName(String name) &#123;       this.name = name;   &#125;   public int getAge() &#123;       return age;   &#125;   public void setAge(int age) &#123;       if (age &lt;= 0 || age &gt; 150) &#123;           System.out.println(&quot;年龄不能为负值，设为默认18 岁&quot;);           this.age = 18;       &#125; else &#123;           this.age = age;       &#125;   &#125;   public float getWeight() &#123;       return weight;   &#125;   public void setWeight(float weight) &#123;       if (weight &lt;= 0 || weight &gt; 1000) &#123;           System.out.println(&quot;体重不能为负值，设为默认50 公斤&quot;);           this.weight = 50;       &#125; else &#123;           this.weight = weight;       &#125;   &#125;&#125;public class Test &#123;   public static void main(String[] args) &#123;       Person p1 = new Person();       p1.setName(&quot;张三&quot;); // 设置姓名       p1.setAge(-5); // 设置年龄       p1.setWeight(0); // 设置体重       System.out.println(p1.getName()); // 获得姓名       System.out.println(p1.getAge()); // 获得年龄       System.out.println(p1.getWeight()); // 获得体重   &#125;&#125;  </code></pre><h3 id="代码块解释"><a href="#代码块解释" class="headerlink" title="代码块解释"></a>代码块解释</h3><p> 在本例中，将3 个属性<code>name</code>、<code>age</code>、<code>weight</code> 设置为<code>private</code>，这样其他类就不能访问这3 个属性。然后又为每个属性写了两个方法<code>getXxx()</code>和<code>setXxx()</code>，将这两个方法设置为<code>public</code>，其他类可以通过<code>setXxx()</code>方法来设置对应的属性，通过<code>getXxx()</code>来获得对应的属性。将<code>setXxx()</code>方法简称为<code>set </code>方法，将<code>getXxx()</code>方法简称为<code>get </code>方法。  </p><blockquote><p>注意<code>this.weight = 50;</code>与<code>this.weight = weight;</code>  </p></blockquote><p> 属性可以在<code>set</code>方法中更改判定方法  </p><hr><h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><hr><h1 id="重载"><a href="#重载" class="headerlink" title="重载"></a>重载</h1><hr><h1 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h1><hr><h1 id="定义和导入包"><a href="#定义和导入包" class="headerlink" title="定义和导入包"></a>定义和导入包</h1><hr>]]></content>
      
      
      <categories>
          
          <category> java学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 封装 </tag>
            
            <tag> set() </tag>
            
            <tag> get() </tag>
            
            <tag> 继承 </tag>
            
            <tag> 重载 </tag>
            
            <tag> 多态 </tag>
            
            <tag> 定义和导入包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇blog</title>
      <link href="2020/09/27/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87blog/"/>
      <url>2020/09/27/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87blog/</url>
      
        <content type="html"><![CDATA[<h1 id="用博客的各种重要知识的网址"><a href="#用博客的各种重要知识的网址" class="headerlink" title="用博客的各种重要知识的网址"></a>用博客的各种重要知识的网址</h1> <a id="more"></a>  <h2 id="首先是markdown文档怎么写"><a href="#首先是markdown文档怎么写" class="headerlink" title="首先是markdown文档怎么写"></a>首先是markdown文档怎么写</h2><p> 井号要先空格一下再写，写多个井号换行要在每句话的最后一个字时至少要空格两下。如果是普通文字则直接回车打字。vsc输入markdown很方便，可以ctrl shift p，然后输入markdown，选择previewside，就可以一边预览一边写。</p><blockquote><p>链接<br> <a href="https://blog.csdn.net/sanallen/article/details/92081911">附上大佬讲解链接</a></p></blockquote><hr><hr><hr><h2 id="GitHub的注册与使用"><a href="#GitHub的注册与使用" class="headerlink" title="GitHub的注册与使用"></a>GitHub的注册与使用</h2><p> <a href="https://www.xiaoheidiannao.com/16078.html">GitHub的注册与使用</a>  </p><hr><hr><h2 id="npm-配置项registry修改为淘宝镜像"><a href="#npm-配置项registry修改为淘宝镜像" class="headerlink" title="npm 配置项registry修改为淘宝镜像"></a>npm 配置项registry修改为淘宝镜像</h2><p> <a href="https://blog.csdn.net/elie_yang/article/details/80036906?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.channel_param&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.channel_param">npm 配置项registry修改为淘宝镜像</a><br> 这个方法非常好用，可以直接改。</p><hr><hr><h2 id="Hexo-yilia-主题一揽子使用方案"><a href="#Hexo-yilia-主题一揽子使用方案" class="headerlink" title="Hexo yilia 主题一揽子使用方案"></a>Hexo yilia 主题一揽子使用方案</h2><h2 id="Hexo-yilia-主题一揽子使用方案-1"><a href="#Hexo-yilia-主题一揽子使用方案-1" class="headerlink" title=" Hexo yilia 主题一揽子使用方案  "></a> <a href="https://blog.csdn.net/lynnbest/article/details/79845944">Hexo yilia 主题一揽子使用方案</a>  </h2><hr><h2 id="保姆级教学"><a href="#保姆级教学" class="headerlink" title="保姆级教学"></a>保姆级教学</h2><p> <a href="https://www.bilibili.com/video/BV1pt411K7o9?p=6&t=315">一步一步教你如何在Windows10上完成hexo博客搭建和yilia主题使用</a>  </p><hr><h2 id="最后附上美图"><a href="#最后附上美图" class="headerlink" title="最后附上美图"></a>最后附上美图</h2><p> <img src= "/img/loading.gif" data-lazy-src="https://imgsa.baidu.com/forum/w%3D275/sign=98faecd45e4e9258a63481e9a983d1d1/731fbed3fd1f413406d301ce2d1f95cad0c85e9f.jpg" alt="美图">  </p><h3 id="第一次写确实有点乱。"><a href="#第一次写确实有点乱。" class="headerlink" title="第一次写确实有点乱。"></a>第一次写确实有点乱。</h3>]]></content>
      
      
      <categories>
          
          <category> 编程区 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转载hexo搭建技术 </tag>
            
            <tag> butterfly主题 </tag>
            
            <tag> yilia主题 </tag>
            
            <tag> FF15图片 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/09/27/hello-world/"/>
      <url>2020/09/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><a id="more"></a> <h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
